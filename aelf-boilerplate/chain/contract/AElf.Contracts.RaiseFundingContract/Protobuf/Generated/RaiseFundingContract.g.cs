// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: raise_funding_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.RaiseFundingContract {

  /// <summary>Holder for reflection information generated from raise_funding_contract.proto</summary>
  public static partial class RaiseFundingContractReflection {

    #region Descriptor
    /// <summary>File descriptor for raise_funding_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaiseFundingContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYWlzZV9mdW5kaW5nX2NvbnRyYWN0LnByb3RvGhJhZWxmL29wdGlvbnMu",
            "cHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90bxoeZ29vZ2xlL3By",
            "b3RvYnVmL3dyYXBwZXJzLnByb3RvIjEKB0Z1bmRpbmcSDwoHaWRDb21pYxgB",
            "IAEoBRIVCg12YWx1ZV9mdW5kaW5nGAIgASgDIhgKCklkZW50aWZpZXISCgoC",
            "aWQYASABKAUy1AEKFFJhaXNlRnVuZGluZ0NvbnRyYWN0EjcKDERlcG9zaXRN",
            "b25leRIILkZ1bmRpbmcaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIA",
            "Ej8KDENoZWNrQmFsYW5jZRILLklkZW50aWZpZXIaGy5nb29nbGUucHJvdG9i",
            "dWYuSW50NjRWYWx1ZSIFiIn3AQEaQrLM9gE9QUVsZi5Db250cmFjdHMuUmFp",
            "c2VGdW5kaW5nQ29udHJhY3QuUmFpc2VGdW5kaW5nQ29udHJhY3RTdGF0ZUIm",
            "qgIjQUVsZi5Db250cmFjdHMuUmFpc2VGdW5kaW5nQ29udHJhY3RiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.RaiseFundingContract.Funding), global::AElf.Contracts.RaiseFundingContract.Funding.Parser, new[]{ "IdComic", "ValueFunding" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.RaiseFundingContract.Identifier), global::AElf.Contracts.RaiseFundingContract.Identifier.Parser, new[]{ "Id" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Funding : pb::IMessage<Funding> {
    private static readonly pb::MessageParser<Funding> _parser = new pb::MessageParser<Funding>(() => new Funding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Funding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.RaiseFundingContract.RaiseFundingContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Funding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Funding(Funding other) : this() {
      idComic_ = other.idComic_;
      valueFunding_ = other.valueFunding_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Funding Clone() {
      return new Funding(this);
    }

    /// <summary>Field number for the "idComic" field.</summary>
    public const int IdComicFieldNumber = 1;
    private int idComic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdComic {
      get { return idComic_; }
      set {
        idComic_ = value;
      }
    }

    /// <summary>Field number for the "value_funding" field.</summary>
    public const int ValueFundingFieldNumber = 2;
    private long valueFunding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValueFunding {
      get { return valueFunding_; }
      set {
        valueFunding_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Funding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Funding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdComic != other.IdComic) return false;
      if (ValueFunding != other.ValueFunding) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdComic != 0) hash ^= IdComic.GetHashCode();
      if (ValueFunding != 0L) hash ^= ValueFunding.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdComic != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdComic);
      }
      if (ValueFunding != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ValueFunding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdComic != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdComic);
      }
      if (ValueFunding != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValueFunding);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Funding other) {
      if (other == null) {
        return;
      }
      if (other.IdComic != 0) {
        IdComic = other.IdComic;
      }
      if (other.ValueFunding != 0L) {
        ValueFunding = other.ValueFunding;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdComic = input.ReadInt32();
            break;
          }
          case 16: {
            ValueFunding = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Identifier : pb::IMessage<Identifier> {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.RaiseFundingContract.RaiseFundingContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier(Identifier other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier Clone() {
      return new Identifier(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identifier other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
