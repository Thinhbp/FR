// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: raise_funding_contract.proto
// </auto-generated>
// Original file comments:
// This files is part of the Hello World smart contract example that is included in Boilerplate.
// It is only the definition of the contract, implementation is located in the "contract" folder
// and tests are located in the "test" folder.
//
// You can use this as a basic template for new contracts.
// 
// When building Boilerplate or the contract project located in the "../contract/AElf.Contracts.RaiseFundingContract/" 
// protoc (the protobuf compiler) will be invoked and this file will produce a .c.cs file and .g.cs file, in the 
// "../contract/AElf.Contracts.RaiseFundingContract/Protobuf/Generated/" folder. 
//
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.RaiseFundingContract {

  #region Events
  #endregion
  public static partial class RaiseFundingContractContainer
  {
    static readonly string __ServiceName = "RaiseFundingContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Contracts.RaiseFundingContract.Funding> __Marshaller_Funding = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.RaiseFundingContract.Funding.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.RaiseFundingContract.Identifier> __Marshaller_Identifier = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.RaiseFundingContract.Identifier.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Contracts.RaiseFundingContract.Funding, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_DepositMoney = new aelf::Method<global::AElf.Contracts.RaiseFundingContract.Funding, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.Action,
        __ServiceName,
        "DepositMoney",
        __Marshaller_Funding,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::AElf.Contracts.RaiseFundingContract.Identifier, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_CheckBalance = new aelf::Method<global::AElf.Contracts.RaiseFundingContract.Identifier, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "CheckBalance",
        __Marshaller_Identifier,
        __Marshaller_google_protobuf_Int64Value);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.RaiseFundingContract.RaiseFundingContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Contracts.RaiseFundingContract.RaiseFundingContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of RaiseFundingContract</summary>
    public abstract partial class RaiseFundingContractBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.RaiseFundingContract.RaiseFundingContractState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value DepositMoney(global::AElf.Contracts.RaiseFundingContract.Funding input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value CheckBalance(global::AElf.Contracts.RaiseFundingContract.Identifier input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(RaiseFundingContractBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_DepositMoney, serviceImpl.DepositMoney)
          .AddMethod(__Method_CheckBalance, serviceImpl.CheckBalance).Build();
    }

  }
}
#endregion

